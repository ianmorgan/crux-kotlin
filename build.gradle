buildscript {

    ext {
        kotlin_version = '1.2.71'
        //crux_version = '19.12-1.6.0-alpha'
        crux_version = '19.09-1.5.0-alpha'
        junit_version = '4.12'
        clojure_version = "1.10.0"
        clojure_plugin_version = "0.4.0"

    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven{ url 'https://repo.clojars.org/'}
        
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.github.gradle-clojure:gradle-clojure-plugin:$clojure_plugin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version '1.2.71'
    id "application"
}

apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: "gradle-clojure.clojure"

clojure {
    builds {
        main {
            aotAll()
        }
    }
}


group 'com.example.crux'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {

    mavenCentral()
    jcenter()
    //mavenLocal()
    maven{ url 'https://repo.clojars.org/'}

}


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "juxt:crux-core:$crux_version"
    compile "juxt:crux-rocksdb:$crux_version"
    compile 'org.clojure:clojure:1.10.1'


    testCompile group: 'junit', name: 'junit', version: "$junit_version"
    testCompile('org.junit.platform:junit-platform-runner:1.0.0')
    
}

sourceSets {
    main.resources.srcDirs = ['resources']
    main.kotlin.srcDirs = ['src/main/kotlin']
    main.clojure.srcDirs = ['src/main/clojure']
    //dev.clojure.srcDirs = ['dev']

    // disable test for not - need to find out how to run tests without needing to AOT everything
    test.clojure.srcDirs = []
//    test.clojure.srcDirs = ['test']
}

processResources {
    // for NON AOT mode - all CLJ files need to be included as resources (and added to the JAR) in order  for clojure to be able to dynamically load files in runtime
    from (sourceSets.main.allSource) {
        include("**/*.clj")
    }
}


compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}


mainClassName = 'com.example.AppKt'

jar {
    from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    archiveName = "crux-demo.jar"
    manifest {
        attributes 'Main-Class': "com.example.AppKt"
    }
}

